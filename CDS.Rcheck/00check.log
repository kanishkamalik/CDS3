* using log directory ‘/Users/kanishkamalik/Desktop/untitled folder/CDS/CDS.Rcheck’
* using R version 3.0.3 (2014-03-06)
* using platform: x86_64-apple-darwin10.8.0 (64-bit)
* using session charset: UTF-8
* checking for file ‘CDS/DESCRIPTION’ ... OK
* this is package ‘CDS’ version ‘0.0-1’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘CDS’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... NOTE
Namespace in Imports field not imported from: ‘methods’
  All declared Imports should be used.
Packages in Depends field not imported from:
  ‘RCurl’ ‘Rcpp’ ‘XML’
  These packages need to be imported from (in the NAMESPACE file)
  for when this namespace is loaded but not attached.
See the information on DESCRIPTION files in the chapter ‘Creating R
packages’ of the ‘Writing R Extensions’ manual.
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
impliedRecoveryRate: no visible binding for global variable ‘lappl’
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘cbind.fill’ ‘mondf’ ‘monnb’
Undocumented S4 classes:
  ‘Date’
Undocumented S4 methods:
  generic 'CS10' and siglist 'CDS'
  generic 'calcIRDV01' and siglist 'CDS'
  generic 'calcRecRisk01' and siglist 'CDS'
  generic 'calcSpreadDV01' and siglist 'CDS'
All user-level objects in a package (including S4 classes and methods)
should have documentation entries.
See the chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... WARNING
Objects in \usage without \alias in documentation object 'show':
  ‘\S4method{show}{CDS}’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See the chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking compiled code ... OK
* checking sizes of PDF files under ‘inst/doc’ ... OK
* checking installed files from ‘inst/doc’ ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... OK
* checking for unstated dependencies in tests ... OK
* checking tests ... ERROR
Running the tests in ‘tests/CDS.CaesarsEntCorp.test.R’ failed.
Last 13 lines of output:
  > load("CDS.CaesarsEntCorp.test.RData")
  > result1 <- CDS(TDate = "2014-04-15",
  +                maturity = "5Y",
  +                parSpread = 12354.529,
  +                currency = "USD",
  +                couponRate = 500,
  +                recoveryRate = 0.40,
  +                isPriceClean = FALSE,
  +                notional = 1e7)
  > stopifnot(all.equal(truth1, result1))
  Error in current[[i]] : this S4 class is not subsettable
  Calls: stopifnot ... all.equal -> all.equal.character -> attr.all.equal -> mode
  Execution halted
